from aiogram import Dispatcher, Bot
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Regexp
from aiogram.types import CallbackQuery, Message, ContentType
from asyncio import sleep

from aiogram.utils.exceptions import MessageNotModified

from tgbot.keyboards.inline import promo_kb, back_kb, back_cb, wallet_kb, cancel_kb
from tgbot.misc.states import Promo


async def promocodes(cb: CallbackQuery, state: FSMContext):
    await cb.answer()
    await state.finish()
    await cb.message.edit_caption("<b>üíå –ü—Ä–æ–º–æ–∫–æ–¥—ã</b>\n\n"
                                  "<b>‚ÑπÔ∏è –í—ã –º–æ–∂–µ—Ç–µ:</b>\n"
                                  "‚Äî –í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥\n"
                                  "‚Äî –ö—É–ø–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥",
                                  reply_markup=promo_kb)


async def enter_code(cb: CallbackQuery, state: FSMContext):
    await Promo.Activate_promo.set()
    await state.update_data(msg_id=cb.message.message_id)
    await state.update_data(promo=cb.message.text)
    await state.update_data(error_msg="<b>‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!</b>\n\n"
                                      "‚Äî –ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ —Ü–∏—Ñ—Ä\n\n"
                                      "<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º</b>")
    await cb.message.edit_caption("<b>üíå –í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥</b>\n\n"
                                  "<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —á–∞—Ç</b>",
                                  reply_markup=back_kb("to_promos"))


async def approve_code(message: Message, state: FSMContext):
    bot = Bot.get_current()
    await state.finish()
    msg = await message.answer("<b>‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –¥–æ—Å—Ç–∏–≥–Ω—É–ª –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ "
                               "–∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–π!</b>")
    await sleep(1.5)
    await bot.delete_message(message.chat.id, msg.message_id)
    await bot.send_animation(message.chat.id, animation="CgACAgIAAxkBAAEBuyFkGeE"
                                                        "-CZ4iDObTVA5tQD1t_LZZxwACJS0AAkJbyUhgfTtFSyXqfC8E",
                             caption="üí∞ <b>–ö–æ—à–µ–ª—ë–∫</b>\n\n‚Äî –ë–∞–ª–∞–Ω—Å: <b>0.0 ‚ÇΩ</b>",
                             reply_markup=wallet_kb)


async def wrong_input(message: Message, state: FSMContext):
    bot = Bot.get_current()
    data = await state.get_data()
    msg_id = data["msg_id"]
    error_msg = data["error_msg"]
    await message.delete()
    try:
        await bot.edit_message_caption(message.chat.id, msg_id,
                                       caption=error_msg,
                                       reply_markup=back_kb("to_promos"))
    except MessageNotModified:
        pass


async def name_code(cb: CallbackQuery, state: FSMContext):
    await Promo.Name.set()
    await state.update_data(msg_id=cb.message.message_id)
    await state.update_data(error_msg="<b>‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!</b>\n\n"
                                      "‚Äî –ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –Ω–µ –±–æ–ª–µ–µ 15 —Ü–∏—Ñ—Ä\n\n"
                                      "<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º</b>")
    await cb.message.edit_caption("<b>üí∞ –ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>\n\n"
                                  "‚Äî –ù–µ –±–æ–ª–µ–µ 15-—Ç–∏ —Ü–∏—Ñ—Ä\n\n"
                                  "<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>",
                                  reply_markup=back_kb("to_promos"))


async def count_of_code(message: Message, state: FSMContext):
    await Promo.Count.set()
    await state.update_data(promo_name=message.text)
    await state.update_data(error_msg="<b>‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!</b>\n\n"
                                      "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π ‚Äî —ç—Ç–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10\n\n"
                                      "<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º</b>")
    data = await state.get_data()
    msg_id = data["msg_id"]
    bot = Bot.get_current()
    await message.delete()
    await bot.edit_message_caption(message.chat.id, msg_id,
                                   caption="<b>üí∞ –ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>\n\n"
                                           f"<b>–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥:</b> <code>{message.text}</code>\n\n"
                                           f"<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>\n"
                                           f"‚Äî –¶–∏—Ñ—Ä–∞ –æ—Ç 1 –¥–æ 10",
                                   reply_markup=cancel_kb)


async def value_of_code(message: Message, state: FSMContext):
    await Promo.Price.set()
    await state.update_data(promo_count=message.text)
    await state.update_data(erroe_msg="<b>‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!</b>\n\n"
                                      "–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ > 10\n\n"
                                      "<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –ø–æ–ª—É—á–∞–µ–º—É—é –∑–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é</b>")
    data = await state.get_data()
    msg_id = data["msg_id"]
    promo_name = data["promo_name"]
    bot = Bot.get_current()
    await message.delete()
    await bot.edit_message_caption(message.chat.id, msg_id,
                                   caption="<b>üí∞ –ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>\n\n"
                                           f"<b>–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥:</b> <code>{promo_name}</code>\n"
                                           f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π:</b> <code>{message.text}</code>\n\n"
                                           f"<b>‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –ø–æ–ª—É—á–∞–µ–º—É—é –∑–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é</b>\n\n"
                                           f"‚Äî –ú–∏–Ω–∏–º—É–º: <b>10 ‚ÇΩ</b>",
                                   reply_markup=cancel_kb)


async def construct_promo(message: Message, state: FSMContext):
    await Promo.Buy.set()
    bot = Bot.get_current()
    await state.finish()
    msg = await message.answer("<b>‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>")
    await sleep(1.5)
    await bot.delete_message(message.chat.id, msg.message_id)
    await bot.send_animation(message.chat.id, animation="CgACAgIAAxkBAAEBuyFkGeE"
                                                        "-CZ4iDObTVA5tQD1t_LZZxwACJS0AAkJbyUhgfTtFSyXqfC8E",
                             caption="üí∞ <b>–ö–æ—à–µ–ª—ë–∫</b>\n\n‚Äî –ë–∞–ª–∞–Ω—Å: <b>0.0 ‚ÇΩ</b>",
                             reply_markup=wallet_kb)


def register_promo(dp: Dispatcher):
    dp.register_callback_query_handler(promocodes, lambda cb: cb.data == "promos")
    dp.register_callback_query_handler(promocodes, back_cb.filter(action="to_promos"), state="*")

    dp.register_callback_query_handler(enter_code, lambda cb: cb.data == "use_code")
    dp.register_message_handler(approve_code, Regexp(r"^[1-9][0-9]{1,14}$"), state=Promo.Activate_promo)
    dp.register_message_handler(wrong_input, state=Promo.Activate_promo)

    dp.register_callback_query_handler(name_code, lambda cb: cb.data == "buy_code")
    dp.register_message_handler(count_of_code, Regexp(r"^[1-9][0-9]{1,14}$"), state=Promo.Name)
    dp.register_message_handler(wrong_input, state=Promo.Name)
    dp.register_message_handler(value_of_code, Regexp(r"^([1-9]|10)$"), state=Promo.Count)
    dp.register_message_handler(wrong_input, state=Promo.Count)
    dp.register_message_handler(construct_promo, state=Promo.Price)
    dp.register_callback_query_handler(promocodes, lambda cb: cb.data == "cancel", state=Promo.Count)
    dp.register_callback_query_handler(promocodes, lambda cb: cb.data == "cancel", state=Promo.Price)



