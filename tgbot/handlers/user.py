from aiogram import Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton

from tgbot.keyboards.inline import play_kb, wallet_kb, referral_kb, help_kb, back_kb, back_cb
from tgbot.keyboards.main_menu import main_menu_kb


async def user_start(message: Message):
    # —Ç—É—Ç –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
    await message.answer_animation(animation="CgACAgIAAxkBAAEBuyFkGeE-CZ4iDObTVA5tQD1t_LZZxwACJS0AAkJbyUhgfTtFSyXqfC8E",
                                   caption="<b>üé≤ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–£–ë!</b>", reply_markup=main_menu_kb,
                                   parse_mode="HTML")


async def user_play(message: Message):
    await message.answer_animation(animation="CgACAgIAAxkBAAEBuyFkGeE-CZ4iDObTVA5tQD1t_LZZxwACJS0AAkJbyUhgfTtFSyXqfC8E",
                                   reply_markup=play_kb)


async def user_wallet(message: Message):
    await message.answer_animation(animation="CgACAgIAAxkBAAEBuyFkGeE-CZ4iDObTVA5tQD1t_LZZxwACJS0AAkJbyUhgfTtFSyXqfC8E",
                                   caption="üí∞ <b>–ö–æ—à–µ–ª—ë–∫</b>\n\n‚Äî –ë–∞–ª–∞–Ω—Å: <b>0.0 ‚ÇΩ</b>",
                                   reply_markup=wallet_kb)


async def user_profile(message: Message):
    await message.answer_animation(animation="CgACAgIAAxkBAAEBuyFkGeE-CZ4iDObTVA5tQD1t_LZZxwACJS0AAkJbyUhgfTtFSyXqfC8E",
                                   caption=f"<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å</b>\n\n"
                                           f"<b>üÜî ID:</b>\n<code>{message.from_user.id}</code>\n"
                                           f"<b>üë§ Username:</b>\n<code>{message.from_user.username}</code>\n"
                                           f"<b>‚è± –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b>\n–ù—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ë–î",
                                   reply_markup=referral_kb)


async def user_profile_return(cb: CallbackQuery):
    await cb.answer()
    await cb.message.edit_caption(caption=f"<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å</b>\n\n"
                                          f"<b>üÜî ID:</b>\n<code>{cb.message.from_user.id}</code>\n"
                                          f"<b>üë§ Username:</b>\n<code>{cb.message.from_user.username}</code>\n"
                                          f"<b>‚è± –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b>\n–ù—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ë–î",
                                  reply_markup=referral_kb)


async def ref_system(cb: CallbackQuery):
    await cb.answer()
    back_btn = InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥",
                                    callback_data=back_cb.new(action="to_profile"))
    back_kb.insert(back_btn)
    await cb.message.edit_caption("<b>üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</b>\n\n"
                                  "üë§ –ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>0</b>\n"
                                  "üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: <b>0.0 ‚ÇΩ</b>\n\n"
                                  "‚Äî –ó–∞ –∫–∞–∂–¥—É—é –ø–æ–±–µ–¥—É –í–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ - –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å 0.5%\n"
                                  "‚Äî –í—ã–≤–æ–¥ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥ –≤–æ–∑–º–æ–∂–µ–Ω –æ—Ç 300 ‚ÇΩ\n\n"
                                  "üîó <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</b>\n"
                                  f"https://t.me/Shu23_Test_bot?start={cb.from_user.id}",
                                  reply_markup=back_kb
                                  )
    back_kb.inline_keyboard.pop()


async def user_help(message: Message):
    await message.answer_animation(animation="CgACAgIAAxkBAAEBuyFkGeE-CZ4iDObTVA5tQD1t_LZZxwACJS0AAkJbyUhgfTtFSyXqfC8E",
                                   reply_markup=help_kb)


def register_user(dp: Dispatcher):
    dp.register_message_handler(user_start, commands=["start"], state="*")
    dp.register_message_handler(user_play, lambda message: message.text == "üé≤ –ò–≥—Ä–∞—Ç—å")
    dp.register_message_handler(user_wallet, lambda message: message.text == "üí∞ –ö–æ—à–µ–ª—ë–∫")
    dp.register_message_handler(user_profile, lambda message: message.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
    dp.register_callback_query_handler(ref_system, lambda cb: cb.data == "ref_sys")
    dp.register_callback_query_handler(user_profile_return, back_cb.filter(action="to_profile"))
    dp.register_message_handler(user_help, lambda message: message.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
