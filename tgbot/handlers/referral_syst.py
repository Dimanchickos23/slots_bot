from aiogram import Dispatcher
from aiogram.types import CallbackQuery, InlineKeyboardButton

from tgbot.keyboards.inline import referral_kb, back_cb, ref_value_kb


async def user_profile_return(cb: CallbackQuery):
    await cb.answer()
    await cb.message.edit_caption(caption=f"<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å</b>\n\n"
                                          f"<b>üÜî ID:</b>\n<code>{cb.from_user.id}</code>\n"
                                          f"<b>üë§ Username:</b>\n<code>{cb.from_user.username}</code>\n"
                                          f"<b>‚è± –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b>\n–ù—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ë–î",
                                  reply_markup=referral_kb)


async def ref_system(cb: CallbackQuery):
    await cb.answer()

    back_btn = InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥",
                                    callback_data=back_cb.new(action="to_profile"))
    ref_value_kb.insert(back_btn)

    await cb.message.edit_caption("<b>üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</b>\n\n"
                                  "üë§ –ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>0</b>\n"
                                  "üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: <b>0.0 ‚ÇΩ</b>\n\n"
                                  "‚Äî –ó–∞ –∫–∞–∂–¥—É—é –ø–æ–±–µ–¥—É –í–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ - –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å 0.5%\n"
                                  "‚Äî –í—ã–≤–æ–¥ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥ –≤–æ–∑–º–æ–∂–µ–Ω –æ—Ç 300 ‚ÇΩ\n\n"
                                  "üîó <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</b>\n"
                                  f"https://t.me/Shu23_Test_bot?start={cb.from_user.id}",
                                  reply_markup=ref_value_kb
                                  )
    ref_value_kb.inline_keyboard.pop()


async def ref_reward_cb(cb: CallbackQuery):
    await cb.answer("‚ö†Ô∏è –£ –≤–∞—Å –Ω—É–ª–µ–≤–æ–π —Å—á–µ—Ç", show_alert=True)
    # —Ç—É—Ç –Ω–∞–¥–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ë–î


def register_referral_sys(dp: Dispatcher):
    dp.register_callback_query_handler(ref_system, lambda cb: cb.data == "ref_sys")
    dp.register_callback_query_handler(user_profile_return, back_cb.filter(action="to_profile"))
    dp.register_callback_query_handler(ref_reward_cb, lambda cb: cb.data == "bonus_funds")